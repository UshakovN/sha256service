package main

import (
  "net/http"
  "log"
  "flag"
  "sha256service/internal/handler"
  "os"
  "os/signal"
  "syscall"
)

func ContinuouslyHandleRequests(port *string, mux http.Handler) {
  log.Printf("start listening on port: %s", *port)
  if err := http.ListenAndServe(":"+*port, mux); err != nil {
    log.Fatalf("server listening error: %v", err)
  }
}

func main() {
  port := flag.String("port", "8080", "bing the HTTP server to this port")
  flag.Parse()

  h := handler.GetRouterHandler()
  go ContinuouslyHandleRequests(port, h)

  exitSignal := make(chan os.Signal)
  signal.Notify(exitSignal, syscall.SIGINT, syscall.SIGTERM)
  <-exitSignal
}
